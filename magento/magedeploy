#!/bin/bash

# 0. Get params
declare target_dir="."
declare target_branch=master
while [ -n "${1}" ]; do
  if [ "${1}" = "-d" ]; then
    [ -z "$(echo "${2}" | grep "^-")" ] && target_dir="${2}" && shift
  elif [ "${1}" = "-b" ]; then
    [ -z "$(echo "${2}" | grep "^-")" ] && target_branch"${2}" && shift
  fi
  shift
done
[ -n "$(echo "${target_dir}" | grep "/$")" ] && target_dir="${target_dir::-1}"

# 1. Validate paths
[ ! -d "${target_dir}" ] && echo -e "ERR~ target directory '${target_dir}' doesn't exists" && exit 1
[ ! -d "${target_dir}/build" ] && echo -e "ERR~ build folder not found at '${target_dir}'" && exit 1
[ ! -f "${target_dir}/build/bin/magento" ] && echo -e "ERR~ No magento app at '${target_dir}/build'" && exit 1
[ ! -d "${target_dir}/site" ] && echo -e "ERR~ site folder not found at '${target_dir}'" && exit 1
[ ! -f "${target_dir}/site/bin/magento" ] && echo -e "ERR~ No magento app at '${target_dir}/site'" && exit 1
echo -e "INF~ MAGEDEPLOY at '${target_dir}' for branch '${target_branch}'"

# 2. Move to build path
cd "${target_dir}/build"

# 3. Update repository
bin/magento maintenance:enable
git restore .
git fetch
git switch "${target_branch}"
git pull

# 4. Merge for build
git switch build
git merge --no-ff --no-edit "${target_branch}"

# 5. Update dependencies
composer i
git restore .

# 6. Build for deploy
bin/magento setup:di:compile
bin/magento setup:static-content:deploy -f
if [ -n "$(git status -s)" ]; then
  git add .
  git commit -m "Build app at $(date)"
fi
bin/magento maintenance:disable

# 7. Move to site path
cd "${target_dir}/site"

# 8. Deploy changes
git fetch
bin/magento maintenance:enable
git pull
bin/magento app:config:import
bin/magento setup:upgrade --keep-generated

# 9. Finish
bin/magento indexer:reindex
bin/magento cache:flush
bin/magento maintenance:disable
